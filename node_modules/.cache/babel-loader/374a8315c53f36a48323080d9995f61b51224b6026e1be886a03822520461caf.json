{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Yuvaraj S Yali/Desktop/CIVILINC/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { Chart, registerables } from 'chart.js';\nChart.register.apply(Chart, _toConsumableArray(registerables));\nexport default {\n  name: 'DataReportsPage',\n  data: function data() {\n    return {\n      activeTab: 'data-exchange',\n      isDragging: false,\n      selectedDepartment: '',\n      selectedFileType: '',\n      dateRange: {\n        start: '',\n        end: ''\n      },\n      analyticsDepartment: '',\n      timeRange: '7',\n      customDateRange: {\n        start: '',\n        end: ''\n      },\n      showPreviewModal: false,\n      selectedFile: null,\n      previewUrl: '',\n      departments: ['Water Supply', 'Roads & Infrastructure', 'Waste Management', 'Public Health', 'Urban Planning'],\n      files: [{\n        id: 1,\n        name: 'Water Supply Report Q1',\n        type: 'PDF',\n        department: 'Water Supply',\n        uploadedBy: 'John Doe',\n        uploadDate: '2024-01-15',\n        viewCount: 45,\n        downloadCount: 12\n      }, {\n        id: 2,\n        name: 'Road Maintenance Data',\n        type: 'CSV',\n        department: 'Roads & Infrastructure',\n        uploadedBy: 'Jane Smith',\n        uploadDate: '2024-01-14',\n        viewCount: 78,\n        downloadCount: 34\n      }],\n      charts: {}\n    };\n  },\n  computed: {\n    filteredFiles: function filteredFiles() {\n      var _this = this;\n      return this.files.filter(function (file) {\n        var matchesDepartment = !_this.selectedDepartment || file.department === _this.selectedDepartment;\n        var matchesType = !_this.selectedFileType || file.type === _this.selectedFileType;\n        var matchesDate = !_this.dateRange.start || !_this.dateRange.end || file.uploadDate >= _this.dateRange.start && file.uploadDate <= _this.dateRange.end;\n        return matchesDepartment && matchesType && matchesDate;\n      });\n    }\n  },\n  methods: {\n    handleLogout: function handleLogout() {\n      localStorage.removeItem('isAuthenticated');\n      this.$router.push('/sign-in');\n    },\n    triggerFileInput: function triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n    handleFileSelect: function handleFileSelect(e) {\n      var files = e.target.files;\n      this.processFiles(files);\n    },\n    handleFileDrop: function handleFileDrop(e) {\n      this.isDragging = false;\n      var files = e.dataTransfer.files;\n      this.processFiles(files);\n    },\n    processFiles: function processFiles(files) {\n      // Handle file processing logic here\n      console.log('Processing files:', files);\n    },\n    getFileIcon: function getFileIcon(type) {\n      var icons = {\n        'PDF': 'fas fa-file-pdf',\n        'CSV': 'fas fa-file-csv',\n        'XLSX': 'fas fa-file-excel'\n      };\n      return icons[type] || 'fas fa-file';\n    },\n    formatDate: function formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    },\n    viewFile: function viewFile(file) {\n      // Implement file preview logic\n      console.log('Viewing file:', file);\n    },\n    downloadFile: function downloadFile(file) {\n      // Implement file download logic\n      console.log('Downloading file:', file);\n    },\n    initializeCharts: function initializeCharts() {\n      var _this2 = this;\n      // Initialize charts when the analytics tab is active\n      if (this.activeTab === 'analytics') {\n        this.$nextTick(function () {\n          // Initialize your charts here\n          _this2.initializeComplaintsChart();\n          _this2.initializeBudgetChart();\n          _this2.initializeDelaysChart();\n          _this2.initializeCompletionChart();\n        });\n      }\n    },\n    initializeComplaintsChart: function initializeComplaintsChart() {\n      var ctx = document.getElementById('complaintsChart');\n      if (ctx && !this.charts.complaints) {\n        this.charts.complaints = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: ['Ward 1', 'Ward 2', 'Ward 3', 'Ward 4', 'Ward 5'],\n            datasets: [{\n              label: 'Complaints',\n              data: [12, 19, 3, 5, 2],\n              backgroundColor: 'rgba(54, 162, 235, 0.5)'\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n      }\n    },\n    initializeBudgetChart: function initializeBudgetChart() {\n      var ctx = document.getElementById('budgetChart');\n      if (ctx && !this.charts.budget) {\n        this.charts.budget = new Chart(ctx, {\n          type: 'doughnut',\n          data: {\n            labels: ['Water Supply', 'Roads', 'Waste Management', 'Public Health'],\n            datasets: [{\n              data: [30, 25, 20, 25],\n              backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)', 'rgba(75, 192, 192, 0.5)']\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n      }\n    },\n    initializeDelaysChart: function initializeDelaysChart() {\n      var ctx = document.getElementById('delaysChart');\n      if (ctx && !this.charts.delays) {\n        this.charts.delays = new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n            datasets: [{\n              label: 'Project Delays',\n              data: [5, 8, 12, 7, 4, 6],\n              borderColor: 'rgba(255, 99, 132, 1)',\n              tension: 0.1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n      }\n    },\n    initializeCompletionChart: function initializeCompletionChart() {\n      var ctx = document.getElementById('completionChart');\n      if (ctx && !this.charts.completion) {\n        this.charts.completion = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: ['Water Supply', 'Roads', 'Waste Management', 'Public Health'],\n            datasets: [{\n              label: 'Completion Rate',\n              data: [85, 65, 90, 75],\n              backgroundColor: 'rgba(75, 192, 192, 0.5)'\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n      }\n    },\n    generateReport: function generateReport() {\n      // Implement report generation logic\n      console.log('Generating report...');\n    },\n    exportToCSV: function exportToCSV() {\n      // Implement CSV export logic\n      console.log('Exporting to CSV...');\n    },\n    exportToPDF: function exportToPDF() {\n      // Implement PDF export logic\n      console.log('Exporting to PDF...');\n    }\n  },\n  watch: {\n    activeTab: function activeTab(newVal) {\n      if (newVal === 'analytics') {\n        this.initializeCharts();\n      }\n    }\n  },\n  mounted: function mounted() {\n    if (this.activeTab === 'analytics') {\n      this.initializeCharts();\n    }\n  }\n};","map":{"version":3,"names":["Chart","registerables","register","apply","_toConsumableArray","name","data","activeTab","isDragging","selectedDepartment","selectedFileType","dateRange","start","end","analyticsDepartment","timeRange","customDateRange","showPreviewModal","selectedFile","previewUrl","departments","files","id","type","department","uploadedBy","uploadDate","viewCount","downloadCount","charts","computed","filteredFiles","_this","filter","file","matchesDepartment","matchesType","matchesDate","methods","handleLogout","localStorage","removeItem","$router","push","triggerFileInput","$refs","fileInput","click","handleFileSelect","e","target","processFiles","handleFileDrop","dataTransfer","console","log","getFileIcon","icons","formatDate","date","Date","toLocaleDateString","viewFile","downloadFile","initializeCharts","_this2","$nextTick","initializeComplaintsChart","initializeBudgetChart","initializeDelaysChart","initializeCompletionChart","ctx","document","getElementById","complaints","labels","datasets","label","backgroundColor","options","responsive","maintainAspectRatio","budget","delays","borderColor","tension","completion","generateReport","exportToCSV","exportToPDF","watch","newVal","mounted"],"sources":["src/views/DataReportsPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"page03-container10\">\r\n    <!-- Sidebar -->\r\n    <div class=\"page03-container11\">\r\n      <div class=\"sidebar-header\">\r\n        <span class=\"page03-text10\">&lt;/&gt; Civilinc</span>\r\n        <div class=\"page03-container12\">\r\n          <img src=\"/Shivayogi-pic.jpg\" alt=\"Profile\" class=\"page03-image\" />\r\n        </div>\r\n        <span class=\"page03-text11\">Welcome back,</span>\r\n        <span class=\"page03-text12\">Dr.Shivayogi.B.Yali</span>\r\n        <span class=\"user-role\">Municipal Commissioner</span>\r\n      </div>\r\n      \r\n      <nav class=\"sidebar-nav\">\r\n        <router-link to=\"/dashboard\" class=\"page03-link1\">\r\n          <i class=\"fas fa-chart-line\"></i>\r\n          Dashboard\r\n        </router-link>\r\n        <router-link to=\"/projects-complaints\" class=\"page03-link2\">\r\n          <i class=\"fas fa-tasks\"></i>\r\n          Projects & Complaints\r\n        </router-link>\r\n        <router-link to=\"/map-forum\" class=\"page03-link3\">\r\n          <i class=\"fas fa-map-marked-alt\"></i>\r\n          Map & Forum\r\n        </router-link>\r\n        <router-link to=\"/data-reports\" class=\"page03-link4\">\r\n          <i class=\"fas fa-database\"></i>\r\n          Data & Reports\r\n        </router-link>\r\n        <router-link to=\"/profile-settings\" class=\"page03-link5\">\r\n          <i class=\"fas fa-user-cog\"></i>\r\n          Profile & Settings\r\n        </router-link>\r\n        <router-link to=\"/\" class=\"page03-link6\" @click=\"handleLogout\">\r\n          <i class=\"fas fa-sign-out-alt\"></i>\r\n          Logout\r\n        </router-link>\r\n      </nav>\r\n    </div>\r\n\r\n    <!-- Main Content -->\r\n    <div class=\"main-content\">\r\n      <div class=\"data-reports-container\">\r\n        <!-- Top Navigation Tabs -->\r\n        <div class=\"tabs-container\">\r\n          <button \r\n            :class=\"['tab-button', { active: activeTab === 'data-exchange' }]\"\r\n            @click=\"activeTab = 'data-exchange'\"\r\n          >\r\n            <i class=\"fas fa-exchange-alt\"></i>\r\n            Data Exchange\r\n          </button>\r\n          <button \r\n            :class=\"['tab-button', { active: activeTab === 'analytics' }]\"\r\n            @click=\"activeTab = 'analytics'\"\r\n          >\r\n            <i class=\"fas fa-chart-bar\"></i>\r\n            Analytics\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Content Area -->\r\n        <div class=\"content-area\">\r\n          <!-- Data Exchange Tab -->\r\n          <div v-if=\"activeTab === 'data-exchange'\" class=\"tab-content\">\r\n            <div class=\"data-exchange-grid\">\r\n              <!-- Upload Area -->\r\n              <div class=\"upload-section\">\r\n                <div class=\"upload-area\" \r\n                     @dragover.prevent \r\n                     @drop.prevent=\"handleFileDrop\"\r\n                     :class=\"{ 'dragging': isDragging }\">\r\n                  <i class=\"fas fa-cloud-upload-alt\"></i>\r\n                  <h3>Drag & Drop Files Here</h3>\r\n                  <p>or</p>\r\n                  <button class=\"upload-button\" @click=\"triggerFileInput\">\r\n                    Browse Files\r\n                  </button>\r\n                  <input \r\n                    type=\"file\" \r\n                    ref=\"fileInput\" \r\n                    @change=\"handleFileSelect\" \r\n                    multiple \r\n                    class=\"hidden\"\r\n                  >\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Filter Area -->\r\n              <div class=\"filter-section\">\r\n                <div class=\"filter-group\">\r\n                  <label>Department</label>\r\n                  <select v-model=\"selectedDepartment\" class=\"filter-select\">\r\n                    <option value=\"\">All Departments</option>\r\n                    <option v-for=\"dept in departments\" :key=\"dept\" :value=\"dept\">\r\n                      {{ dept }}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"filter-group\">\r\n                  <label>File Type</label>\r\n                  <select v-model=\"selectedFileType\" class=\"filter-select\">\r\n                    <option value=\"\">All Types</option>\r\n                    <option value=\"PDF\">PDF</option>\r\n                    <option value=\"CSV\">CSV</option>\r\n                    <option value=\"XLSX\">XLSX</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"filter-group\">\r\n                  <label>Date Range</label>\r\n                  <div class=\"date-range\">\r\n                    <input \r\n                      type=\"date\" \r\n                      v-model=\"dateRange.start\" \r\n                      class=\"date-input\"\r\n                    >\r\n                    <span>to</span>\r\n                    <input \r\n                      type=\"date\" \r\n                      v-model=\"dateRange.end\" \r\n                      class=\"date-input\"\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Files Table -->\r\n            <div class=\"files-table-container\">\r\n              <table class=\"data-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>File Name</th>\r\n                    <th>Type</th>\r\n                    <th>Department</th>\r\n                    <th>Uploaded By</th>\r\n                    <th>Upload Date</th>\r\n                    <th>Views</th>\r\n                    <th>Downloads</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"file in filteredFiles\" :key=\"file.id\">\r\n                    <td>\r\n                      <i :class=\"getFileIcon(file.type)\"></i>\r\n                      {{ file.name }}\r\n                    </td>\r\n                    <td>{{ file.type }}</td>\r\n                    <td>{{ file.department }}</td>\r\n                    <td>{{ file.uploadedBy }}</td>\r\n                    <td>{{ formatDate(file.uploadDate) }}</td>\r\n                    <td>{{ file.viewCount }}</td>\r\n                    <td>{{ file.downloadCount }}</td>\r\n                    <td>\r\n                      <button class=\"action-icon\" @click=\"viewFile(file)\">\r\n                        <i class=\"fas fa-eye\"></i>\r\n                      </button>\r\n                      <button class=\"action-icon\" @click=\"downloadFile(file)\">\r\n                        <i class=\"fas fa-download\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Analytics Tab -->\r\n          <div v-if=\"activeTab === 'analytics'\" class=\"tab-content\">\r\n            <div class=\"analytics-grid\">\r\n              <!-- Filters -->\r\n              <div class=\"analytics-filters\">\r\n                <div class=\"filter-group\">\r\n                  <label>Department</label>\r\n                  <select v-model=\"analyticsDepartment\" class=\"filter-select\">\r\n                    <option value=\"\">All Departments</option>\r\n                    <option v-for=\"dept in departments\" :key=\"dept\" :value=\"dept\">\r\n                      {{ dept }}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"filter-group\">\r\n                  <label>Time Range</label>\r\n                  <select v-model=\"timeRange\" class=\"filter-select\">\r\n                    <option value=\"7\">Last 7 Days</option>\r\n                    <option value=\"30\">Last 30 Days</option>\r\n                    <option value=\"90\">Last 90 Days</option>\r\n                    <option value=\"custom\">Custom Range</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"filter-group\" v-if=\"timeRange === 'custom'\">\r\n                  <label>Custom Range</label>\r\n                  <div class=\"date-range\">\r\n                    <input \r\n                      type=\"date\" \r\n                      v-model=\"customDateRange.start\" \r\n                      class=\"date-input\"\r\n                    >\r\n                    <span>to</span>\r\n                    <input \r\n                      type=\"date\" \r\n                      v-model=\"customDateRange.end\" \r\n                      class=\"date-input\"\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Charts -->\r\n              <div class=\"charts-grid\">\r\n                <div class=\"chart-container\">\r\n                  <h3>Complaints by Ward</h3>\r\n                  <canvas id=\"complaintsChart\"></canvas>\r\n                </div>\r\n                <div class=\"chart-container\">\r\n                  <h3>Budget Usage by Department</h3>\r\n                  <canvas id=\"budgetChart\"></canvas>\r\n                </div>\r\n                <div class=\"chart-container\">\r\n                  <h3>Project Delays Over Time</h3>\r\n                  <canvas id=\"delaysChart\"></canvas>\r\n                </div>\r\n                <div class=\"chart-container\">\r\n                  <h3>Work Completion Rate</h3>\r\n                  <canvas id=\"completionChart\"></canvas>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Export Options -->\r\n              <div class=\"export-options\">\r\n                <button class=\"export-button\" @click=\"generateReport\">\r\n                  <i class=\"fas fa-file-pdf\"></i>\r\n                  Generate Report\r\n                </button>\r\n                <button class=\"export-button\" @click=\"exportToCSV\">\r\n                  <i class=\"fas fa-file-csv\"></i>\r\n                  Export to CSV\r\n                </button>\r\n                <button class=\"export-button\" @click=\"exportToPDF\">\r\n                  <i class=\"fas fa-file-pdf\"></i>\r\n                  Export to PDF\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- File Preview Modal -->\r\n    <div v-if=\"showPreviewModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h3>{{ selectedFile?.name }}</h3>\r\n          <button class=\"close-button\" @click=\"showPreviewModal = false\">\r\n            <i class=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <iframe v-if=\"selectedFile?.type === 'PDF'\" :src=\"previewUrl\" class=\"preview-frame\"></iframe>\r\n          <div v-else class=\"preview-placeholder\">\r\n            <i class=\"fas fa-file-alt\"></i>\r\n            <p>Preview not available for this file type</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Chart, registerables } from 'chart.js'\r\nChart.register(...registerables)\r\n\r\nexport default {\r\n  name: 'DataReportsPage',\r\n  data() {\r\n    return {\r\n      activeTab: 'data-exchange',\r\n      isDragging: false,\r\n      selectedDepartment: '',\r\n      selectedFileType: '',\r\n      dateRange: {\r\n        start: '',\r\n        end: ''\r\n      },\r\n      analyticsDepartment: '',\r\n      timeRange: '7',\r\n      customDateRange: {\r\n        start: '',\r\n        end: ''\r\n      },\r\n      showPreviewModal: false,\r\n      selectedFile: null,\r\n      previewUrl: '',\r\n      departments: [\r\n        'Water Supply',\r\n        'Roads & Infrastructure',\r\n        'Waste Management',\r\n        'Public Health',\r\n        'Urban Planning'\r\n      ],\r\n      files: [\r\n        {\r\n          id: 1,\r\n          name: 'Water Supply Report Q1',\r\n          type: 'PDF',\r\n          department: 'Water Supply',\r\n          uploadedBy: 'John Doe',\r\n          uploadDate: '2024-01-15',\r\n          viewCount: 45,\r\n          downloadCount: 12\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Road Maintenance Data',\r\n          type: 'CSV',\r\n          department: 'Roads & Infrastructure',\r\n          uploadedBy: 'Jane Smith',\r\n          uploadDate: '2024-01-14',\r\n          viewCount: 78,\r\n          downloadCount: 34\r\n        }\r\n      ],\r\n      charts: {}\r\n    }\r\n  },\r\n  computed: {\r\n    filteredFiles() {\r\n      return this.files.filter(file => {\r\n        const matchesDepartment = !this.selectedDepartment || file.department === this.selectedDepartment\r\n        const matchesType = !this.selectedFileType || file.type === this.selectedFileType\r\n        const matchesDate = !this.dateRange.start || !this.dateRange.end || \r\n          (file.uploadDate >= this.dateRange.start && file.uploadDate <= this.dateRange.end)\r\n        return matchesDepartment && matchesType && matchesDate\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogout() {\r\n      localStorage.removeItem('isAuthenticated')\r\n      this.$router.push('/sign-in')\r\n    },\r\n    triggerFileInput() {\r\n      this.$refs.fileInput.click()\r\n    },\r\n    handleFileSelect(e) {\r\n      const files = e.target.files\r\n      this.processFiles(files)\r\n    },\r\n    handleFileDrop(e) {\r\n      this.isDragging = false\r\n      const files = e.dataTransfer.files\r\n      this.processFiles(files)\r\n    },\r\n    processFiles(files) {\r\n      // Handle file processing logic here\r\n      console.log('Processing files:', files)\r\n    },\r\n    getFileIcon(type) {\r\n      const icons = {\r\n        'PDF': 'fas fa-file-pdf',\r\n        'CSV': 'fas fa-file-csv',\r\n        'XLSX': 'fas fa-file-excel'\r\n      }\r\n      return icons[type] || 'fas fa-file'\r\n    },\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleDateString()\r\n    },\r\n    viewFile(file) {\r\n      // Implement file preview logic\r\n      console.log('Viewing file:', file)\r\n    },\r\n    downloadFile(file) {\r\n      // Implement file download logic\r\n      console.log('Downloading file:', file)\r\n    },\r\n    initializeCharts() {\r\n      // Initialize charts when the analytics tab is active\r\n      if (this.activeTab === 'analytics') {\r\n        this.$nextTick(() => {\r\n          // Initialize your charts here\r\n          this.initializeComplaintsChart()\r\n          this.initializeBudgetChart()\r\n          this.initializeDelaysChart()\r\n          this.initializeCompletionChart()\r\n        })\r\n      }\r\n    },\r\n    initializeComplaintsChart() {\r\n      const ctx = document.getElementById('complaintsChart')\r\n      if (ctx && !this.charts.complaints) {\r\n        this.charts.complaints = new Chart(ctx, {\r\n          type: 'bar',\r\n          data: {\r\n            labels: ['Ward 1', 'Ward 2', 'Ward 3', 'Ward 4', 'Ward 5'],\r\n            datasets: [{\r\n              label: 'Complaints',\r\n              data: [12, 19, 3, 5, 2],\r\n              backgroundColor: 'rgba(54, 162, 235, 0.5)'\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false\r\n          }\r\n        })\r\n      }\r\n    },\r\n    initializeBudgetChart() {\r\n      const ctx = document.getElementById('budgetChart')\r\n      if (ctx && !this.charts.budget) {\r\n        this.charts.budget = new Chart(ctx, {\r\n          type: 'doughnut',\r\n          data: {\r\n            labels: ['Water Supply', 'Roads', 'Waste Management', 'Public Health'],\r\n            datasets: [{\r\n              data: [30, 25, 20, 25],\r\n              backgroundColor: [\r\n                'rgba(255, 99, 132, 0.5)',\r\n                'rgba(54, 162, 235, 0.5)',\r\n                'rgba(255, 206, 86, 0.5)',\r\n                'rgba(75, 192, 192, 0.5)'\r\n              ]\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false\r\n          }\r\n        })\r\n      }\r\n    },\r\n    initializeDelaysChart() {\r\n      const ctx = document.getElementById('delaysChart')\r\n      if (ctx && !this.charts.delays) {\r\n        this.charts.delays = new Chart(ctx, {\r\n          type: 'line',\r\n          data: {\r\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n            datasets: [{\r\n              label: 'Project Delays',\r\n              data: [5, 8, 12, 7, 4, 6],\r\n              borderColor: 'rgba(255, 99, 132, 1)',\r\n              tension: 0.1\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false\r\n          }\r\n        })\r\n      }\r\n    },\r\n    initializeCompletionChart() {\r\n      const ctx = document.getElementById('completionChart')\r\n      if (ctx && !this.charts.completion) {\r\n        this.charts.completion = new Chart(ctx, {\r\n          type: 'bar',\r\n          data: {\r\n            labels: ['Water Supply', 'Roads', 'Waste Management', 'Public Health'],\r\n            datasets: [{\r\n              label: 'Completion Rate',\r\n              data: [85, 65, 90, 75],\r\n              backgroundColor: 'rgba(75, 192, 192, 0.5)'\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false\r\n          }\r\n        })\r\n      }\r\n    },\r\n    generateReport() {\r\n      // Implement report generation logic\r\n      console.log('Generating report...')\r\n    },\r\n    exportToCSV() {\r\n      // Implement CSV export logic\r\n      console.log('Exporting to CSV...')\r\n    },\r\n    exportToPDF() {\r\n      // Implement PDF export logic\r\n      console.log('Exporting to PDF...')\r\n    }\r\n  },\r\n  watch: {\r\n    activeTab(newVal) {\r\n      if (newVal === 'analytics') {\r\n        this.initializeCharts()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.activeTab === 'analytics') {\r\n      this.initializeCharts()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page03-container10 {\r\n  display: flex;\r\n  min-height: 100vh;\r\n  background-color: #f3f4f6;\r\n}\r\n\r\n.page03-container11 {\r\n  width: 280px;\r\n  background-color: #1e40af;\r\n  color: white;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.sidebar-header {\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.page03-text10 {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 1rem;\r\n  display: block;\r\n}\r\n\r\n.page03-image {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin: 1rem auto;\r\n  border: 3px solid white;\r\n}\r\n\r\n.page03-text11,\r\n.page03-text12 {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.user-role {\r\n  font-size: 0.9rem;\r\n  opacity: 0.8;\r\n}\r\n\r\n.sidebar-nav {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.sidebar-nav a {\r\n  color: white;\r\n  text-decoration: none;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 0.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.sidebar-nav a:hover,\r\n.sidebar-nav a.router-link-active {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.sidebar-nav i {\r\n  width: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.main-content {\r\n  flex: 1;\r\n  padding: 2rem;\r\n  overflow-y: auto;\r\n}\r\n\r\n.data-reports-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.tabs-container {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.tab-button {\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  background-color: #e5e7eb;\r\n  color: #4b5563;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.tab-button:hover {\r\n  background-color: #d1d5db;\r\n}\r\n\r\n.tab-button.active {\r\n  background-color: #1e40af;\r\n  color: white;\r\n}\r\n\r\n.content-area {\r\n  background-color: white;\r\n  border-radius: 0.5rem;\r\n  padding: 2rem;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.data-exchange-grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.upload-section {\r\n  grid-column: 1 / -1;\r\n}\r\n\r\n.upload-area {\r\n  border: 2px dashed #d1d5db;\r\n  border-radius: 0.5rem;\r\n  padding: 2rem;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.upload-area:hover,\r\n.upload-area.dragging {\r\n  border-color: #1e40af;\r\n  background-color: #f8fafc;\r\n}\r\n\r\n.upload-area i {\r\n  font-size: 3rem;\r\n  color: #1e40af;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.upload-area h3 {\r\n  color: #1e40af;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.upload-button {\r\n  background-color: #1e40af;\r\n  color: white;\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  margin-top: 1rem;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: #1e3a8a;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.filter-section {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.filter-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.filter-group label {\r\n  font-weight: 500;\r\n  color: #4b5563;\r\n}\r\n\r\n.filter-select,\r\n.date-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 0.375rem;\r\n  background-color: white;\r\n}\r\n\r\n.date-range {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.files-table-container {\r\n  margin-top: 2rem;\r\n  overflow-x: auto;\r\n}\r\n\r\n.data-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.data-table th,\r\n.data-table td {\r\n  padding: 1rem;\r\n  text-align: left;\r\n  border-bottom: 1px solid #e5e7eb;\r\n}\r\n\r\n.data-table th {\r\n  background-color: #f9fafb;\r\n  font-weight: 500;\r\n  color: #4b5563;\r\n}\r\n\r\n.data-table tr:hover {\r\n  background-color: #f9fafb;\r\n}\r\n\r\n.action-icon {\r\n  background: none;\r\n  border: none;\r\n  color: #1e40af;\r\n  cursor: pointer;\r\n  padding: 0.25rem;\r\n  margin: 0 0.25rem;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.action-icon:hover {\r\n  color: #1e3a8a;\r\n}\r\n\r\n.analytics-grid {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n}\r\n\r\n.analytics-filters {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.charts-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1.5rem;\r\n}\r\n\r\n.chart-container {\r\n  background: white;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 0.5rem;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chart-container h3 {\r\n  color: #1e40af;\r\n  margin-bottom: 1rem;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.chart-container canvas {\r\n  width: 100% !important;\r\n  height: 300px !important;\r\n}\r\n\r\n.export-options {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.export-button {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: #1e40af;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.export-button:hover {\r\n  background-color: #1e3a8a;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .charts-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .page03-container10 {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .page03-container11 {\r\n    width: 100%;\r\n    padding: 1rem;\r\n  }\r\n\r\n  .data-exchange-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .export-options {\r\n    flex-direction: column;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}