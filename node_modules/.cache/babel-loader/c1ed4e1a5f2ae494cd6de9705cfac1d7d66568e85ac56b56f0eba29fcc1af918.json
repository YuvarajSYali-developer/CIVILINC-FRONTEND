{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport Meta from 'vue-meta';\nimport './style.css';\nVue.use(VueRouter);\nVue.use(Meta);\nvar router = new VueRouter({\n  mode: 'history',\n  routes: [{\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: function component() {\n      return import('@/views/page-03.vue');\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/projects-complaints',\n    name: 'Projects & Complaints',\n    component: function component() {\n      return import('@/views/ProjectsAndComplaints.vue');\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/sign-in',\n    name: 'Sign In',\n    component: function component() {\n      return import('@/views/page-02.vue');\n    },\n    meta: {\n      requiresGuest: true\n    }\n  }, {\n    path: '/',\n    name: 'Home',\n    component: function component() {\n      return import('@/views/home.vue');\n    }\n  }, {\n    path: '*',\n    name: 'Not Found',\n    component: function component() {\n      return import('@/views/not-found.vue');\n    }\n  }]\n});\n\n// Navigation guard\nrouter.beforeEach(function (to, from, next) {\n  var isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';\n\n  // If route requires auth and user is not authenticated\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    if (!isAuthenticated) {\n      next({\n        path: '/sign-in',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      next();\n    }\n  }\n  // If route requires guest (like sign-in page) and user is authenticated\n  else if (to.matched.some(function (record) {\n    return record.meta.requiresGuest;\n  })) {\n    if (isAuthenticated && from.path !== '/') {\n      next('/dashboard');\n    } else {\n      next();\n    }\n  }\n  // For all other routes\n  else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","Meta","use","router","mode","routes","path","name","component","meta","requiresAuth","requiresGuest","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","matched","some","record","query","redirect","fullPath"],"sources":["C:/Users/Yuvaraj S Yali/Desktop/CIVILINC/src/router.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Meta from 'vue-meta'\n\nimport './style.css'\n\nVue.use(VueRouter)\nVue.use(Meta)\n\nconst router = new VueRouter({\n  mode: 'history',\n  routes: [\n    {\n      path: '/dashboard',\n      name: 'Dashboard',\n      component: () => import('@/views/page-03.vue'),\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: '/projects-complaints',\n      name: 'Projects & Complaints',\n      component: () => import('@/views/ProjectsAndComplaints.vue'),\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: '/sign-in',\n      name: 'Sign In',\n      component: () => import('@/views/page-02.vue'),\n      meta: {\n        requiresGuest: true\n      }\n    },\n    {\n      path: '/',\n      name: 'Home',\n      component: () => import('@/views/home.vue')\n    },\n    {\n      path: '*',\n      name: 'Not Found',\n      component: () => import('@/views/not-found.vue')\n    }\n  ]\n})\n\n// Navigation guard\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true'\n  \n  // If route requires auth and user is not authenticated\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isAuthenticated) {\n      next({\n        path: '/sign-in',\n        query: { redirect: to.fullPath }\n      })\n    } else {\n      next()\n    }\n  }\n  // If route requires guest (like sign-in page) and user is authenticated\n  else if (to.matched.some(record => record.meta.requiresGuest)) {\n    if (isAuthenticated && from.path !== '/') {\n      next('/dashboard')\n    } else {\n      next()\n    }\n  }\n  // For all other routes\n  else {\n    next()\n  }\n})\n\nexport default router\n"],"mappings":";;;;;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,UAAU;AAE3B,OAAO,aAAa;AAEpBF,GAAG,CAACG,GAAG,CAACF,SAAS,CAAC;AAClBD,GAAG,CAACG,GAAG,CAACD,IAAI,CAAC;AAEb,IAAME,MAAM,GAAG,IAAIH,SAAS,CAAC;EAC3BI,IAAI,EAAE,SAAS;EACfC,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAE,SAAXA,SAASA,CAAA;MAAA,OAAQ,MAAM,CAAC,qBAAqB,CAAC;IAAA;IAC9CC,IAAI,EAAE;MACJC,YAAY,EAAE;IAChB;EACF,CAAC,EACD;IACEJ,IAAI,EAAE,sBAAsB;IAC5BC,IAAI,EAAE,uBAAuB;IAC7BC,SAAS,EAAE,SAAXA,SAASA,CAAA;MAAA,OAAQ,MAAM,CAAC,mCAAmC,CAAC;IAAA;IAC5DC,IAAI,EAAE;MACJC,YAAY,EAAE;IAChB;EACF,CAAC,EACD;IACEJ,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,SAAS;IACfC,SAAS,EAAE,SAAXA,SAASA,CAAA;MAAA,OAAQ,MAAM,CAAC,qBAAqB,CAAC;IAAA;IAC9CC,IAAI,EAAE;MACJE,aAAa,EAAE;IACjB;EACF,CAAC,EACD;IACEL,IAAI,EAAE,GAAG;IACTC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE,SAAXA,SAASA,CAAA;MAAA,OAAQ,MAAM,CAAC,kBAAkB,CAAC;IAAA;EAC7C,CAAC,EACD;IACEF,IAAI,EAAE,GAAG;IACTC,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAE,SAAXA,SAASA,CAAA;MAAA,OAAQ,MAAM,CAAC,uBAAuB,CAAC;IAAA;EAClD,CAAC;AAEL,CAAC,CAAC;;AAEF;AACAL,MAAM,CAACS,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC,IAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;;EAE1E;EACA,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACZ,IAAI,CAACC,YAAY;EAAA,EAAC,EAAE;IACvD,IAAI,CAACM,eAAe,EAAE;MACpBD,IAAI,CAAC;QACHT,IAAI,EAAE,UAAU;QAChBgB,KAAK,EAAE;UAAEC,QAAQ,EAAEV,EAAE,CAACW;QAAS;MACjC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLT,IAAI,CAAC,CAAC;IACR;EACF;EACA;EAAA,KACK,IAAIF,EAAE,CAACM,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACZ,IAAI,CAACE,aAAa;EAAA,EAAC,EAAE;IAC7D,IAAIK,eAAe,IAAIF,IAAI,CAACR,IAAI,KAAK,GAAG,EAAE;MACxCS,IAAI,CAAC,YAAY,CAAC;IACpB,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF;EACA;EAAA,KACK;IACHA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeZ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}